-ServerChat-
il server si avvia (porta 7777): attende due connessioni, avviate connessioni chiede il nome utente; alla prima connessione dice di attenderela seconda, alla seconda dice ad entrambi che sono connessi l'un l'altro. entrambi possono mandar messaggi contemporaneamente, e li ricevano nel formato "Da: [mittente] Testo: [messaggio]" - nel caso di chat tra due.
Creare nuovo formato messaggio in una stringa, in una classe Messaggio
Creare un thread sempre attivo che permett di inserire anche sul server dei comandi come (senza . - la q di . indica l'ordine in cui vanno implementati 1. 2.. 3...):
.list: mostra i partecipanti connnessi alla chat
.exit: chiude il server e sconnette tutti
..exclude-[nome utente]: rimuove una determinata persona dalla chat
..ban-[nome utente o indirizzo ip*]: esclude il colegamento di una certa persona dalla chat
...close: impedisce ad altri utenti di connettersi
...open: permette di connettersi al server (da usare dopo il .close)
..send-[messaggio]: permette di inviare a tutti gli utenti connessi un messaggio

-Client //ReceiveMessage //SendMessage-
possibilit√† tramite speciale formato el messaggio di inviarlo solo ad un determinato partner?
sostituire il passaggio di tutto il Client con qualcosa che racchiuda la roba in elenco sotto - un'altra classe

-ClientReceiveMessage-
gestisce il ciclo per ricevere messaggi
-ClientSendMessage-
gestisce il ciclo per inviare i messaggi

-add on-
implementare una chat grafica semplice: input testo in basso, tasto invio, aggiunta messaggi ad un panel scorrevole